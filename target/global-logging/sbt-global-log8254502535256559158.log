[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\User\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\User\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (Oracle Corporation Java 1.8.0_281)
[debug]       Load.loadUnit: plugins took 190.5552ms
[debug]       Load.loadUnit: defsScala took 0.5745ms
[debug] [Loading] Scanning directory C:\Users\User\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\User\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 40.6993 ms
[debug]           Load.resolveProject(global-plugins) took 76.1407ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\User\.sbt\1.0\plugins, plugins: List(<none>))) took 163.0973ms
[debug] [Loading] Done in C:\Users\User\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 198.4397ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3987ms
[debug]     Load.loadUnit(file:/C:/Users/User/.sbt/1.0/plugins/, ...) took 402.2503ms
[debug]   Load.apply: load took 680.622ms
[debug]   Load.apply: resolveProjects took 9.7023ms
[debug]   Load.apply: finalTransforms took 101.9513ms
[debug]   Load.apply: config.delegates took 20.5481ms
[debug]   Load.apply: Def.make(settings)... took 967.0975ms
[debug]   Load.apply: structureIndex took 210.1078ms
[debug]   Load.apply: mkStreams took 2.7842ms
[info] loading global plugins from C:\Users\User\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5859.1222ms
[debug]           Load.loadUnit: plugins took 110.0451ms
[debug]           Load.loadUnit: defsScala took 0.0051ms
[debug] [Loading] Scanning directory C:\Users\User\Desktop\Capacitaciones\Scala\play-scala-starter-example-2.6.x\akka-clustering\project
[debug]             Load.loadUnit: mkEval took 16.9907ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\User\Desktop\Capacitaciones\Scala\play-scala-starter-example-2.6.x\akka-clustering\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.9388 ms
[info] loading settings for project akka-clustering-build from idea1.sbt ...
[debug]               Load.resolveProject(akka-clustering-build) took 18.5736ms
[debug]             Load.loadTransitive: finalizeProject(Project(id akka-clustering-build, base: C:\Users\User\Desktop\Capacitaciones\Scala\play-scala-starter-example-2.6.x\akka-clustering\project, plugins: List(<none>))) took 25.1358ms
[debug] [Loading] Done in C:\Users\User\Desktop\Capacitaciones\Scala\play-scala-starter-example-2.6.x\akka-clustering\project, returning: (akka-clustering-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 4822.0385ms
[debug]           Load.loadUnit: cleanEvalClasses took 14.8293ms
[debug]         Load.loadUnit(file:/C:/Users/User/Desktop/Capacitaciones/Scala/play-scala-starter-example-2.6.x/akka-clustering/project/, ...) took 4948.8916ms
[debug]       Load.apply: load took 4951.1437ms
[debug]       Load.apply: resolveProjects took 0.2894ms
[debug]       Load.apply: finalTransforms took 55.9765ms
[debug]       Load.apply: config.delegates took 0.5665ms
[debug]       Load.apply: Def.make(settings)... took 249.8631ms
[debug]       Load.apply: structureIndex took 81.956ms
[debug]       Load.apply: mkStreams took 0.0026ms
[info] loading project definition from C:\Users\User\Desktop\Capacitaciones\Scala\play-scala-starter-example-2.6.x\akka-clustering\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 11578.9137ms
[debug]     Load.loadUnit: defsScala took 0.0058ms
[debug] [Loading] Scanning directory C:\Users\User\Desktop\Capacitaciones\Scala\play-scala-starter-example-2.6.x\akka-clustering
[debug]       Load.loadUnit: mkEval took 0.4169ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\User\Desktop\Capacitaciones\Scala\play-scala-starter-example-2.6.x\akka-clustering, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.0286 ms
[info] loading settings for project akka-clustering from build.sbt ...
[debug]         Load.resolveProject(akka-clustering) took 75.9737ms
[debug]       Load.loadTransitive: finalizeProject(Project(id akka-clustering, base: C:\Users\User\Desktop\Capacitaciones\Scala\play-scala-starter-example-2.6.x\akka-clustering, plugins: List(<none>))) took 81.8682ms
[debug] [Loading] Done in C:\Users\User\Desktop\Capacitaciones\Scala\play-scala-starter-example-2.6.x\akka-clustering, returning: (akka-clustering)
[debug]     Load.loadUnit: loadedProjectsRaw took 4692.4077ms
[debug]     Load.loadUnit: cleanEvalClasses took 22.2764ms
[debug]   Load.loadUnit(file:/C:/Users/User/Desktop/Capacitaciones/Scala/play-scala-starter-example-2.6.x/akka-clustering/, ...) took 16294.7325ms
[debug] Load.apply: load took 16297.9428ms
[debug] Load.apply: resolveProjects took 0.2078ms
[debug] Load.apply: finalTransforms took 75.0837ms
[debug] Load.apply: config.delegates took 0.4481ms
[debug] Load.apply: Def.make(settings)... took 293.992ms
[debug] Load.apply: structureIndex took 64.249ms
[debug] Load.apply: mkStreams took 0.0029ms
[info] set current project to akka-clustering (in build file:/C:/Users/User/Desktop/Capacitaciones/Scala/play-scala-starter-example-2.6.x/akka-clustering/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 57845 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 57845, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to akka-clustering (in build file:/C:/Users/User/Desktop/Capacitaciones/Scala/play-scala-starter-example-2.6.x/akka-clustering/)
[debug] > Exec(idea-shell, None, None)
